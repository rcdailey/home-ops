---
esphome:
  name: emporiavue3

substitutions:
  display_name: EmpVu3

external_components:
#  - source: github://emporia-vue-local/esphome@dev
- source: github://digiblur/esphome-vue3@dev
  components:
  - emporia_vue

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

preferences:
  # the default of 1min is far too short--flash chip is rated
  # for approx 100k writes.
  flash_write_interval: "48h"

api:
ota:
  platform: esphome

logger:
  logs:
    sensor: INFO

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.2.192
  ap:

captive_portal:

i2c:
  sda: 5
  scl: 18
  scan: false
  frequency: 200kHz # recommended range is 50-200kHz
  id: i2c_a

switch:
- platform: restart
  name: Restart

time:
- platform: sntp
  id: sntp_time

# these are called references in YAML. They allow you to reuse
# this configuration in each sensor, while only defining it once
.defaultfilters:
- &moving_avg
  # we capture a new sample every 0.24 seconds, so the time can
  # be calculated from the number of samples as n * 0.24.
  sliding_window_moving_average:
    # we average over the past 2.88 seconds
    window_size: 24
    # we push a new value every 1.44 seconds
    send_every: 12
- &invert
  # invert and filter out any values below 0.
  lambda: 'return max(-x, 0.0f);'
- &pos
  # filter out any values below 0.
  lambda: 'return max(x, 0.0f);'
- &abs
  # take the absolute value of the value
  lambda: 'return abs(x);'

sensor:
- platform: emporia_vue
  i2c_id: i2c_a
  phases:
  # 40, leg 2
  # Leg L2: 3, 4, 7, 8, 11, 12, 15, 16, 19, 20, 23, 24, 27, 28, 31, 32, 35, 36, 39, 40
  - id: phase_a # Verify that this specific phase/leg is connected to correct input wire color on device listed below
    input: RED # Vue device wire color
    calibration: 0.0189 #0.0194  # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
    # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
    voltage:
      name: "Phase A Voltage"
      filters: [*pos, *pos]
  # 42, leg 1
  # Leg L1: 1, 2, 5, 6, 9, 10, 13, 14, 17, 18, 21, 22, 25, 26, 29, 30, 33, 34, 37, 38, 41, 42
  - id: phase_b # Verify that this specific phase/leg is connected to correct input wire color on device listed below
    input: BLACK # Vue device wire color
    calibration: 0.0189 #0.0194  # 0.022 is used as the default as starting point but may need adjusted to ensure accuracy
    # To calculate new calibration value use the formula <in-use calibration value> * <accurate voltage> / <reporting voltage>
    voltage:
      name: "Phase B Voltage"
      filters: [*moving_avg, *pos]
  ct_clamps:
  - phase_id: phase_a
    input: "A" # Verify the CT going to this device input also matches the phase/leg
    power:
      name: "Phase A Power"
      id: phase_a_power
      device_class: power
      filters: [*moving_avg, *pos]
  - phase_id: phase_b
    input: "B" # Verify the CT going to this device input also matches the phase/leg
    power:
      name: "Phase B Power"
      id: phase_b_power
      device_class: power
      filters: [*moving_avg, *pos]
  # Pay close attention to set the phase_id for each breaker by matching it to the phase/leg it connects to in the panel
  - {phase_id: phase_a, input: "1", power: {name: "CT01 Power: Subpanel Black", id: cir1, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_b, input: "2", power: {name: "CT02 Power: Subpanel Red", id: cir2, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_a, input: "3", power: {name: "CT03 Power: AC1", id: cir3, filters: [*moving_avg, *pos, {multiply: 2}]}}
  - {phase_id: phase_a, input: "4", power: {name: "CT04 Power: AC2", id: cir4, filters: [*moving_avg, *pos, {multiply: 2}]}}
  - {phase_id: phase_b, input: "5", power: {name: "CT05 Power: AC3", id: cir5, filters: [*moving_avg, *pos, {multiply: 2}]}}
  - {phase_id: phase_b, input: "6", power: {name: "CT06 Power: Oven", id: cir6, filters: [*moving_avg, *pos, {multiply: 2}]}}
  - {phase_id: phase_b, input: "7", power: {name: "CT07 Power: Dryer", id: cir7, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_b, input: "8", power: {name: "CT08 Power: Pool Red", id: cir8, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_a, input: "9", power: {name: "CT09 Power: Pool Black", id: cir9, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_b, input: "10", power: {name: "CT10 Power: Server", id: cir10, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_a, input: "11", power: {name: "CT11 Power: Ice Maker", id: cir11, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_b, input: "12", power: {name: "CT12 Power: Media Fridge", id: cir12, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_b, input: "13", power: {name: "CT13 Power: Garage GFI", id: cir13, filters: [*moving_avg, *pos]}}
  - {phase_id: phase_a, input: "14", power: {name: "CT14 Power: Media 20a", id: cir14, filters: [*moving_avg, *pos]},}
  #- { phase_id: phase_b, input: "15", power: { name: "Circuit 15 Power", id: cir15, filters: [ *moving_avg, *pos ] } }
  #- { phase_id: phase_a, input: "16", power: { name: "Circuit 16 Power", id: cir16, filters: [ *moving_avg, *pos ] } }
- platform: template
  name: "Total Power"
  lambda: return id(phase_a_power).state + id(phase_b_power).state;
  update_interval: 10s
  id: total_power
  unit_of_measurement: "W"
- platform: total_daily_energy
  name: "Total Daily Energy"
  power_id: total_power
  accuracy_decimals: 0
- {power_id: cir1, platform: total_daily_energy, accuracy_decimals: 0, name: "CT01 Usage: Subpanel Black"}
- {power_id: cir2, platform: total_daily_energy, accuracy_decimals: 0, name: "CT02 Usage: Subpanel Red"}
- {power_id: cir3, platform: total_daily_energy, accuracy_decimals: 0, name: "CT03 Usage: AC1"}
- {power_id: cir4, platform: total_daily_energy, accuracy_decimals: 0, name: "CT04 Usage: AC2"}
- {power_id: cir5, platform: total_daily_energy, accuracy_decimals: 0, name: "CT05 Usage: AC3"}
- {power_id: cir6, platform: total_daily_energy, accuracy_decimals: 0, name: "CT06 Usage: Oven"}
- {power_id: cir7, platform: total_daily_energy, accuracy_decimals: 0, name: "CT07 Usage: Dryer"}
- {power_id: cir8, platform: total_daily_energy, accuracy_decimals: 0, name: "CT08 Usage: Pool Red"}
- {power_id: cir9, platform: total_daily_energy, accuracy_decimals: 0, name: "CT09 Usage: Pool Black"}
- {power_id: cir10, platform: total_daily_energy, accuracy_decimals: 0, name: "CT10 Usage: Server"}
- {power_id: cir11, platform: total_daily_energy, accuracy_decimals: 0, name: "CT11 Usage: Ice Maker"}
- {power_id: cir12, platform: total_daily_energy, accuracy_decimals: 0, name: "CT12 Usage: Media Fridge"}
- {power_id: cir13, platform: total_daily_energy, accuracy_decimals: 0, name: "CT13 Usage: Garage GFI"}
- {power_id: cir14, platform: total_daily_energy, accuracy_decimals: 0, name: "CT14 Usage: Media 20a",}
#- { power_id: cir15, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 15 Daily Energy" }
#- { power_id: cir16, platform: total_daily_energy, accuracy_decimals: 0, name: "Circuit 16 Daily Energy" }
