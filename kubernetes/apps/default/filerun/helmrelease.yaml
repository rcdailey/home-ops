---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: filerun
  namespace: default
spec:
  interval: 1h
  timeout: 10m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  valuesFrom:
  - kind: Secret
    name: cluster-secrets
    optional: true
  values:
    defaultPodOptions:
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    controllers:
      filerun:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          bootstrap-html:
            image:
              repository: docker.io/rclone/rclone
              tag: 1.71@sha256:3103526c506266a9ecdf064efe99bf3677d92ef6407af124d8c56b4f49cbaa51
            command:
            - /bin/sh
            - -c
            - |
              set -e
              # Check if already initialized (look for core/classes directory as sentinel)
              if [ -d "/html/core/classes" ]; then
                echo "HTML directory already initialized, skipping bootstrap"
                exit 0
              fi
              echo "Initializing HTML directory from S3 bootstrap data..."

              # Download and extract using rclone (configured via env vars)
              echo "Downloading filerun-html.zip from S3..."
              rclone copy garage:bootstrap-data/filerun/filerun-html.zip /tmp/ \
                --multi-thread-streams=4 --buffer-size=64M \
                --low-level-retries=10 --retries=3 --timeout=10s -vv
              echo "Extracting files..."
              unzip -q /tmp/filerun-html.zip -d /html
              echo "Bootstrap complete"
            env:
            - name: RCLONE_CONFIG_GARAGE_TYPE
              value: s3
            - name: RCLONE_CONFIG_GARAGE_PROVIDER
              value: Other
            - name: RCLONE_CONFIG_GARAGE_ACCESS_KEY_ID
              value: "${S3_ACCESS_KEY_ID}"
            - name: RCLONE_CONFIG_GARAGE_SECRET_ACCESS_KEY
              value: "${S3_SECRET_ACCESS_KEY}"
            - name: RCLONE_CONFIG_GARAGE_ENDPOINT
              value: "http://192.168.1.58:3900"
            - name: RCLONE_CONFIG_GARAGE_REGION
              value: "${S3_REGION}"
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              allowPrivilegeEscalation: false

        containers:
          app:
            image:
              repository: filerun/filerun
              tag: "8.1"
            env:
              FR_DB_HOST: filerun-mariadb
              FR_DB_PORT: "3306"
              FR_DB_NAME: filerun
              FR_DB_USER: filerun
              APACHE_RUN_USER: "1000"
              APACHE_RUN_USER_ID: "1000"
              APACHE_RUN_GROUP: "1000"
              APACHE_RUN_GROUP_ID: "1000"
              ELASTICSEARCH_URL: "http://filerun-elasticsearch:9200"
              TIKA_SERVER_URL: "http://filerun-tika:9998"
            envFrom:
            - secretRef:
                name: filerun-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                add:
                - CHOWN
                - DAC_OVERRIDE
                - SETUID
                - SETGID
                drop:
                - ALL

      elasticsearch:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: elasticsearch
              tag: "8.19.6"
            env:
              cluster.name: docker-cluster
              bootstrap.memory_lock: "true"
              ES_JAVA_OPTS: "-Xms512m -Xmx512m"
              discovery.type: single-node
              xpack.security.enabled: "false"
            probes:
              liveness:
                enabled: true
                spec:
                  httpGet:
                    path: /_cluster/health
                    port: 9200
                  initialDelaySeconds: 60
                  periodSeconds: 30
              readiness:
                enabled: true
                spec:
                  httpGet:
                    path: /_cluster/health
                    port: 9200
                  initialDelaySeconds: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 200m
                memory: 1Gi
              limits:
                memory: 2Gi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                - ALL

      tika:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: logicalspark/docker-tikaserver
              tag: latest
            probes:
              liveness:
                enabled: true
                spec:
                  httpGet:
                    path: /tika
                    port: 9998
                  initialDelaySeconds: 30
                  periodSeconds: 30
              readiness:
                enabled: true
                spec:
                  httpGet:
                    path: /tika
                    port: 9998
                  initialDelaySeconds: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                - ALL

      search-indexer:
        type: cronjob
        cronjob:
          schedule: "*/5 * * * *"
          backoffLimit: 0
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          ttlSecondsAfterFinished: 300

        pod:
          restartPolicy: Never
          securityContext:
            seccompProfile:
              type: RuntimeDefault

        containers:
          app:
            image:
              repository: filerun/filerun
              tag: "8.1"
            command:
            - php
            args:
            - /var/www/html/cron/process_search_index_queue.php
            env:
              FR_DB_HOST: filerun-mariadb
              FR_DB_PORT: "3306"
              FR_DB_NAME: filerun
              FR_DB_USER: filerun
              APACHE_RUN_USER: "1000"
              APACHE_RUN_USER_ID: "1000"
              APACHE_RUN_GROUP: "1000"
              APACHE_RUN_GROUP_ID: "1000"
            envFrom:
            - secretRef:
                name: filerun-secret
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                add:
                - CHOWN
                - DAC_OVERRIDE
                - SETUID
                - SETGID
                drop:
                - ALL

    service:
      app:
        controller: filerun
        type: ClusterIP
        ports:
          http:
            port: 80
            targetPort: 80
            protocol: HTTP

      elasticsearch:
        controller: elasticsearch
        type: ClusterIP
        ports:
          http:
            port: 9200
            targetPort: 9200
            protocol: HTTP

      tika:
        controller: tika
        type: ClusterIP
        ports:
          http:
            port: 9998
            targetPort: 9998
            protocol: HTTP

    route:
      app:
        hostnames:
        - cloud.${SECRET_DOMAIN}
        parentRefs:
        - name: external
          namespace: network
          sectionName: https
        rules:
        - backendRefs:
          - name: filerun-app
            port: 80

    persistence:
      filerun-html:
        type: persistentVolumeClaim
        existingClaim: filerun-html-pvc
        advancedMounts:
          filerun:
            bootstrap-html:
            - path: /html
            app:
            - path: /var/www/html
          search-indexer:
            app:
            - path: /var/www/html

      user-files:
        type: nfs
        server: 192.168.1.58
        path: /mnt/user/filerun
        globalMounts:
        - path: /user-files

      elasticsearch-data:
        type: persistentVolumeClaim
        existingClaim: filerun-elasticsearch-pvc
        advancedMounts:
          elasticsearch:
            app:
            - path: /usr/share/elasticsearch/data
