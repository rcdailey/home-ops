---
# yaml-language-server: $schema=https://json.schemastore.org/helmrelease-flux-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: infisical
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  driftDetection:
    mode: enabled
    ignore:
    - paths:
      - /spec/replicas
      target:
        kind: Deployment
  maxHistory: 3
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    timeout: 10m
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: infisical/infisical
              tag: v0.146.0-postgres@sha256:1cb068126b9c9ae4229825edfa737024bef089e6620c3f5ef4e429bf812f8ff0
            env:
              # Database connection
              DB_CONNECTION_URI:
                valueFrom:
                  secretKeyRef:
                    name: infisical-postgres-app
                    key: uri
              # Encryption settings
              ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: infisical-secret
                    key: ENCRYPTION_KEY
              AUTH_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: infisical-secret
                    key: AUTH_SECRET
              # Site configuration
              SITE_URL: https://secrets.${SECRET_DOMAIN}
              TELEMETRY_ENABLED: "false"
              # Redis configuration
              REDIS_URL: redis://infisical-redis:6379
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/status
                    port: 8080
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/status
                    port: 8080
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: [ALL]
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi

      redis:
        containers:
          main:
            image:
              repository: ghcr.io/valkey-io/valkey
              tag: 8.1.3-alpine
            command: ["redis-server", "--save", ""]
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 256Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

    service:
      main:
        controller: main
        ports:
          http:
            port: 8080
      redis:
        controller: redis
        ports:
          redis:
            port: 6379

    persistence:
      tmp:
        type: emptyDir
        advancedMounts:
          main:
            main:
            - path: /tmp
      ssl-certs:
        type: emptyDir
        advancedMounts:
          main:
            main:
            - path: /etc/ssl/certs
      ca-certificates:
        type: emptyDir
        advancedMounts:
          main:
            main:
            - path: /usr/local/share/ca-certificates

    route:
      main:
        enabled: true
        parentRefs:
        - name: internal
          namespace: network
        hostnames:
        - secrets.${SECRET_DOMAIN}
        rules:
        - matches:
          - path:
              type: PathPrefix
              value: /
          backendRefs:
          - name: infisical-main
            port: 8080
