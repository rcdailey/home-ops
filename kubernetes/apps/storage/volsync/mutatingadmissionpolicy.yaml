# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/admissionregistration.k8s.io/mutatingadmissionpolicy_v1beta1.json
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicyBinding
metadata:
  name: volsync-mover-nfs
spec:
  policyName: volsync-mover-nfs
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingAdmissionPolicy
metadata:
  name: volsync-mover-nfs
spec:
  matchConstraints:
    resourceRules:
    - apiGroups:
      - batch
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - jobs
  matchConditions:
  - name: has-volsync-job-name-prefix
    expression: object.metadata.name.startsWith("volsync-")
  - name: has-volsync-created-by-labels
    expression: object.metadata.?labels["app.kubernetes.io/created-by"].orValue("") == "volsync"
  - name: repository-volume-does-not-exist
    expression: |
      !has(object.spec.template.spec.volumes) ||
      !object.spec.template.spec.volumes.exists(item, item.name == "repository")
  failurePolicy: Fail
  reinvocationPolicy: IfNeeded
  mutations:
  - patchType: JSONPatch
    jsonPatch:
      expression: |
        [
          JSONPatch{
            op: "add", path: "/spec/template/spec/volumes/-",
            value: Object.spec.template.spec.volumes{
              name: "repository",
              nfs: Object.spec.template.spec.volumes.nfs{
                server: "192.168.1.58",
                path: "/mnt/user/volsync",
                readOnly: false
              }
            }
          },
          JSONPatch{
            op: "add", path: "/spec/template/spec/containers/0/volumeMounts/-",
            value: Object.spec.template.spec.containers.volumeMounts{
              name: "repository",
              mountPath: "/repository",
              readOnly: false
            }
          }
        ]
