---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-logs-single
spec:
  interval: 30m
  timeout: 20m
  chartRef:
    kind: OCIRepository
    name: victoria-logs-single
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    disableWait: true # Don't wait for resources - prevents deadlock when DaemonSet can't start
    remediation:
      retries: 3
  values:
    server:
      enabled: true
      # Override the service name to match expected naming convention
      fullnameOverride: "victoria-logs-single"
      retentionPeriod: 14
      extraArgs:
        envflag.enable: true
        envflag.prefix: VM_
        loggerFormat: json
        httpListenAddr: :9428
        http.shutdownDelay: 15s

      persistentVolume:
        enabled: true
        storageClassName: ceph-block
        accessModes:
        - ReadWriteOnce
        size: 25Gi
        mountPath: /storage

      resources:
        limits:
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 256Mi

      service:
        type: ClusterIP
        servicePort: 9428
        targetPort: http

      # Security context
      securityContext:
        enabled: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true

      podSecurityContext:
        enabled: true
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000

      # TEMPORARY: Avoid nami node until NVMe OSD migration completes
      # Remove this affinity rule after Samsung 990 Pro NVMe is installed and BX500 SATA OSD is removed
      # See: docs/memory-bank/ceph-osd-nvme-migration-nami.md
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values: [nami]

    # Enable Vector log collection
    vector:
      enabled: true
      # Chart has backwards logic: creates ConfigMap ONLY if vector-vl-config is IN existingConfigMaps
      # See: charts/victoria-logs-single/templates/vector-config.yaml line 4
      existingConfigMaps:
      - vector-vl-config
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 20m
          memory: 128Mi

      # Mount VRL files from ConfigMap
      extraVolumes:
      - name: vector-vrl
        configMap:
          name: victoria-logs-vector-vrl

      extraVolumeMounts:
      - name: vector-vrl
        mountPath: /etc/vector/vrl
        readOnly: true

      customConfig:
        data_dir: /vector-data-dir
        api:
          enabled: false
          address: 0.0.0.0:8686
          playground: true

        # Global configuration for memory optimization
        expire_metrics_secs: 600

        sources:
          k8s:
            type: kubernetes_logs
            # Memory optimization: Use API server cache instead of etcd
            use_apiserver_cache: true
            # Exclude high-volume, low-value namespaces
            exclude_paths_glob_patterns:
            - /var/log/pods/rook-ceph_*/**
            - /var/log/pods/kube-system_*/**
          internal_metrics:
            type: internal_metrics

        transforms:
          # Default parser for all apps (fallback)
          default_parser:
            type: remap
            inputs: [k8s]
            source: |
              # Try to parse JSON logs
              .log = parse_json(.message) ?? .message

              # Extract app name from pod labels or pod name
              .app = .kubernetes.pod_labels.app
              if .app == null && .kubernetes.pod_name != null {
                .app = split(string!(.kubernetes.pod_name), "-")[0]
              }
              .namespace = .kubernetes.pod_namespace

              # Set default level if not present
              if !exists(.level) {
                .level = "info"
                .severity = "info"
              }

          # Filter for kometa logs
          kometa_filter:
            type: filter
            inputs: [k8s]
            condition:
              type: vrl
              source: |
                .kubernetes.pod_labels.app == "kometa" && .kubernetes.container_name == "app"

          # Custom parser for kometa
          kometa_parser:
            type: remap
            inputs: [kometa_filter]
            file: /etc/vector/vrl/parse-kometa.vrl

          # Filter for qbittorrent logs
          qbittorrent_filter:
            type: filter
            inputs: [k8s]
            condition:
              type: vrl
              source: |
                .kubernetes.pod_labels.app == "qbittorrent"

          # Custom parser for qbittorrent
          qbittorrent_parser:
            type: remap
            inputs: [qbittorrent_filter]
            file: /etc/vector/vrl/parse-qbittorrent.vrl

        sinks:
          exporter:
            type: prometheus_exporter
            address: 0.0.0.0:9090
            inputs: [internal_metrics]

          vlogs:
            type: elasticsearch
            inputs: [default_parser, kometa_parser, qbittorrent_parser]
            mode: bulk
            api_version: v8
            compression: gzip
            healthcheck:
              enabled: false
            # Buffer configuration for memory optimization
            buffer:
              type: memory
              max_events: 10000
              when_full: drop_newest
            # Batch settings for memory efficiency
            batch:
              max_bytes: 1048576 # 1MB
              timeout_secs: 5
            request:
              headers:
                VL-Time-Field: timestamp
                VL-Stream-Fields: stream,kubernetes.pod_name,kubernetes.container_name,kubernetes.pod_namespace,app
                VL-Msg-Field: message,msg,_msg,log.msg,log.message,log
                AccountID: "0"
                ProjectID: "0"
            endpoints:
            - http://victoria-logs-single:9428/insert/elasticsearch/

    # Service monitor for metrics
    serviceMonitor:
      enabled: true
      extraLabels: {}
      annotations: {}
      targetPort: http
