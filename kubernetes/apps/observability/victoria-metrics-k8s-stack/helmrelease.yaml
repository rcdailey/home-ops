---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrepository-source-v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: victoria-metrics
spec:
  interval: 1h
  url: https://victoriametrics.github.io/helm-charts
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-k8s-stack
spec:
  interval: 30m
  timeout: 20m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: 0.59.3
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics
  install:
    crds: CreateReplace
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    # Disable Grafana since we're using separate deployment
    grafana:
      enabled: false

    # Use VMSingle for homelab deployment
    vmsingle:
      enabled: true
      spec:
        retentionPeriod: "14d"
        replicaCount: 1
        storage:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 30Gi
          storageClassName: ceph-block
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi

    # Disable VMCluster for single-node deployment
    vmcluster:
      enabled: false

    # AlertManager configuration
    alertmanager:
      enabled: true
      spec:
        replicaCount: 1
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi

    # VMAlert configuration
    vmalert:
      enabled: true
      spec:
        evaluationInterval: 15s
        selectAllByDefault: true
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi

    # VMAgent configuration
    vmagent:
      enabled: true
      spec:
        scrapeInterval: 20s
        selectAllByDefault: true
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 64Mi
        extraArgs:
          promscrape.streamParse: "true"
          promscrape.dropOriginalLabels: "true"

    # Node exporter
    prometheus-node-exporter:
      enabled: true
      resources:
        limits:
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 16Mi

    # Kube-state-metrics
    kube-state-metrics:
      enabled: true
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi

    # Default rules and dashboards
    defaultRules:
      create: true
      additionalGroupByLabels: []
      groups:
        etcd:
          create: true
        general:
          create: true
        k8sContainerCpuLimits:
          create: true
        k8sContainerMemoryLimits:
          create: true
        k8sContainerResource:
          create: true
        kubeApiserver:
          create: true
        kubelet:
          create: true
        kubernetesApps:
          create: true
        kubernetesResources:
          create: true
        kubernetesStorage:
          create: true
        kubernetesSystem:
          create: true
        node:
          create: true
        vmagent:
          create: true
        vmsingle:
          create: true
        vmHealth:
          create: true

    # Kubernetes component monitoring
    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: true
      endpoints: []
      service:
        enabled: true
        port: 10257
        targetPort: 10257
        selector:
          component: kube-controller-manager
      vmScrape:
        spec:
          jobLabel: jobLabel
          namespaceSelector:
            matchNames:
            - kube-system
          endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: http-metrics
            scheme: https
            tlsConfig:
              insecureSkipVerify: true
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

    kubeScheduler:
      enabled: true
      endpoints: []
      service:
        enabled: true
        port: 10259
        targetPort: 10259
        selector:
          component: kube-scheduler
      vmScrape:
        spec:
          jobLabel: jobLabel
          namespaceSelector:
            matchNames:
            - kube-system
          endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            port: http-metrics
            scheme: https
            tlsConfig:
              insecureSkipVerify: true
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

    kubeEtcd:
      enabled: true
      endpoints: []
      service:
        enabled: true
        port: 2379
        targetPort: 2379
        selector:
          component: etcd

    coreDns:
      enabled: true
      service:
        enabled: true
        port: 9153
        targetPort: 9153
        selector:
          k8s-app: kube-dns

    kubeProxy:
      enabled: false

    # Kubelet monitoring
    kubelet:
      enabled: true
      vmScrapes:
        cadvisor:
          enabled: true
          spec:
            path: /metrics/cadvisor
        probes:
          enabled: true
          spec:
            path: /metrics/probes
        resources:
          enabled: true
          spec:
            path: /metrics/resource
        kubelet:
          spec: {}
      vmScrape:
        kind: VMNodeScrape
        spec:
          scheme: "https"
          honorLabels: true
          interval: "30s"
          scrapeTimeout: "5s"
          tlsConfig:
            insecureSkipVerify: true
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          metricRelabelConfigs:
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            source_labels: [__name__]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
          relabelConfigs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - targetLabel: job
            replacement: kubelet

    # VictoriaMetrics Operator
    victoria-metrics-operator:
      enabled: true
      operator:
        disable_prometheus_converter: false
      serviceMonitor:
        enabled: true
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 64Mi
