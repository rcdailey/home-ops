---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kometa
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      kometa:
        type: cronjob
        annotations:
          reloader.stakater.com/auto: "true"

        cronjob:
          # Run 4x daily - reduced frequency to prevent overlap
          # Schedule: 01:00, 09:00, 15:00, 21:00 (6 hour intervals)
          schedule: "0 1,9,15,21 * * *"
          timeZone: America/Chicago
          # CRITICAL: Forbid prevents overlapping jobs - CronJob will skip new runs if previous still active
          concurrencyPolicy: Forbid
          # Keep only 1 job in history to prevent Flux from triggering duplicate jobs during reconciliation
          successfulJobsHistory: 1
          failedJobsHistory: 1
          # Timeout jobs after 5 hours to prevent blocking next run
          activeDeadlineSeconds: 18000
          # Limit retries to prevent infinite loops
          backoffLimit: 0
          # Cleanup completed jobs after 1 hour
          ttlSecondsAfterFinished: 3600

        # CRITICAL: Vector logging sidecar MUST be in initContainers with restartPolicy: Always
        #
        # WHY: CronJobs with ReadWriteOnce (RWO) PVCs require sidecars to terminate when main container completes.
        #      Without this, the sidecar keeps running after the job finishes, preventing the RWO volume from being
        #      released. This causes subsequent CronJob runs to fail with "Multi-Attach error" because the volume
        #      is still attached to the previous pod.
        #
        # WHAT: Native Kubernetes sidecar pattern (stable since K8s 1.29, fully supported in 1.34+):
        #       - Sidecar placed in initContainers with restartPolicy: Always
        #       - Starts BEFORE main containers (ensures log collection is ready)
        #       - Runs ALONGSIDE main containers (collects logs during job execution)
        #       - Terminates AFTER main containers complete (prevents volume attachment conflicts)
        #
        # ALTERNATIVES CONSIDERED:
        #       - shareProcessNamespace + manual termination: Rejected due to complexity and security implications
        #       - PreStop hooks: Rejected due to race conditions and unreliability with Jobs
        #       - Separate log collection: Rejected due to loss of per-job log isolation
        #
        # WHEN TO RECONSIDER:
        #       - If switching from RWO (ceph-block) to RWX (ceph-filesystem) storage
        #       - If removing Vector logging entirely
        #       - If moving to a different log collection architecture
        #
        # REFERENCES:
        #       - https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/
        #       - https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/
        initContainers:
          vector-sidecar:
            image:
              repository: timberio/vector
              tag: 0.50.0-alpine
            restartPolicy: Always # Makes this a native sidecar - auto-terminates after main container
            env:
              TZ: America/Chicago
              VECTOR_CONFIG_PATH: /etc/vector/vector.yaml
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                cpu: 100m
                memory: 128Mi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: [ALL]

        containers:
          app:
            image:
              repository: kometateam/kometa
              tag: v2.2.2@sha256:32992226d1a505da3ed5d4e9c97bed8a6deb7aef36cd5ef8b1f519762607df45
            command:
            - /bin/sh
            - -c
            args:
            - |
              python3 kometa.py --run --read-only-config --run-libraries "Anime Series";
              python3 kometa.py --run --read-only-config --run-libraries "Movies";
              python3 kometa.py --run --read-only-config --run-libraries "TV Shows";
            env:
              TZ: America/Chicago
            envFrom:
            - secretRef:
                name: kometa-secret
            resources:
              requests:
                cpu: 10m
                memory: 4Gi
              limits:
                memory: 8Gi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop: [ALL]

    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: kometa
        advancedMounts:
          kometa:
            app:
            - path: /config

      config-file:
        type: configMap
        name: kometa-configmap
        advancedMounts:
          kometa:
            app:
            - path: /config/config.yml
              subPath: config.yml
              readOnly: true

      vector-config:
        type: configMap
        name: kometa-vector-configmap
        advancedMounts:
          kometa:
            vector-sidecar:
            - path: /etc/vector/vector.yaml
              subPath: vector.yaml
              readOnly: true
            - path: /etc/vector/parse-kometa.vrl
              subPath: parse-kometa.vrl
              readOnly: true

      vector-data:
        type: emptyDir
        advancedMounts:
          kometa:
            vector-sidecar:
            - path: /var/lib/vector

      logs:
        type: emptyDir
        advancedMounts:
          kometa:
            app:
            - path: /config/logs
              subPath: logs
            vector-sidecar:
            - path: /config/logs
              subPath: logs
              readOnly: true
