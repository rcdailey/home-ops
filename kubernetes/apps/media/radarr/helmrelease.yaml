---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      radarr:
        # CRITICAL: Recreate strategy required for RWO volumes (ceph-block storage)
        # RollingUpdate would cause Multi-Attach errors as new pod starts before old pod terminates
        strategy: Recreate
        replicas: 1
        annotations:
          reloader.stakater.com/auto: "true"

        # Migration init containers - remove after successful data migration
        initContainers:
          rsync-migration:
            image:
              repository: docker.io/library/alpine
              tag: 3.21.3
            command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting rsync migration from NFS source..."
              apk add --no-cache rsync
              rsync -av --info=progress2 /mnt/source/_retired/media/radarr/ /config/
              echo "Rsync migration completed successfully"
            securityContext:
              runAsUser: 0
              runAsGroup: 0

          chown-migration:
            image:
              repository: docker.io/library/alpine
              tag: 3.21.3
            command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting ownership change..."
              chown -R 1000:1000 /config
              echo "Ownership change completed successfully"
            securityContext:
              runAsUser: 0
              runAsGroup: 0

        pod:
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            nameOverride: radarr
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.1.10258
            env:
              UMASK: "022"
              RADARR__APP__INSTANCENAME: "Radarr"
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
              RADARR__UPDATE__BRANCH: main
              TZ: America/Chicago
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 4Gi
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL

    service:
      app:
        ports:
          http:
            port: *port

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: radarr
        advancedMounts:
          radarr:
            app:
            - path: /config
            rsync-migration:
            - path: /config
            chown-migration:
            - path: /config

      # NFS mount for migration source data - remove after migration completes
      source:
        type: nfs
        server: 192.168.1.58
        path: /mnt/user/docker
        advancedMounts:
          radarr:
            rsync-migration:
            - path: /mnt/source
              readOnly: true

      media:
        type: nfs
        server: 192.168.1.58
        path: /mnt/user/media
        advancedMounts:
          radarr:
            app:
            - path: /media

      tmp:
        type: emptyDir
        advancedMounts:
          radarr:
            app:
            - path: /tmp

    route:
      app:
        hostnames: ["radarr.${SECRET_DOMAIN}"]
        parentRefs:
        - name: external
          namespace: network
          sectionName: https
