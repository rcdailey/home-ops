---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/kustomization-kustomize-v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: external-secrets
spec:
  targetNamespace: kube-system
  commonMetadata:
    labels:
      app.kubernetes.io/name: external-secrets
  interval: 10m
  timeout: 5m
  path: ./kubernetes/apps/kube-system/external-secrets/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: true
  dependsOn:
  - name: flux-system
    namespace: flux-system
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/kustomization-kustomize-v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: external-secrets-bitwarden
spec:
  targetNamespace: kube-system
  commonMetadata:
    labels:
      app.kubernetes.io/name: external-secrets-bitwarden
  interval: 10m
  timeout: 5m
  path: ./kubernetes/apps/kube-system/external-secrets/bitwarden
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  decryption:
    provider: sops
    secretRef:
      name: sops-age
  wait: true
  dependsOn:
  - name: external-secrets
  # ENHANCEMENT: Health checks to prevent premature "Ready" status
  # Ensures bitwarden-cli pod is operational before marking kustomization ready
  # Prevents race conditions where ClusterSecretStores are created before provider is ready
  # Based on onedr0p/home-ops pattern - only provider kustomizations have health checks
  healthChecks:
  - apiVersion: apps/v1
    kind: Deployment
    name: bitwarden-cli
    namespace: kube-system
  # CEL expressions to validate ClusterSecretStore readiness
  # Only marks kustomization Ready when all ClusterSecretStores have Ready=True condition
  # Eliminates timing issues between provider availability and store validation
  healthCheckExprs:
  - apiVersion: external-secrets.io/v1
    kind: ClusterSecretStore
    failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
    current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
