---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  list-nodes:
    desc: List available Talos nodes with IPs
    dir: '{{.TALOS_DIR}}'
    cmd: yq '.nodes[] | .hostname + " (" + .ipAddress + ") [" + (.controlPlane | tostring | sub("true"; "control-plane") | sub("false"; "worker")) + "]"' {{.TALOS_DIR}}/talconfig.yaml
    silent: true

  generate-config:
    desc: Generate Talos configuration
    dir: '{{.TALOS_DIR}}'
    cmd: talhelper genconfig
    preconditions:
      - test -f {{.TALOS_DIR}}/talconfig.yaml
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which talhelper

  apply-node:
    desc: Apply Talos config to a node [NODE=hostname or interactive]
    dir: '{{.TALOS_DIR}}'
    cmd: |
      if [ -z "{{.NODE}}" ]; then
        SELECTION=$(yq '.nodes[] | .hostname + " (" + .ipAddress + ") [" + (.controlPlane | tostring | sub("true"; "control-plane") | sub("false"; "worker")) + "]"' {{.TALOS_DIR}}/talconfig.yaml | fzf --prompt="Select node: ")
        NODE=$(echo "$SELECTION" | cut -d' ' -f1)
      else
        NODE="{{.NODE}}"
      fi
      IP=$(yq ".nodes[] | select(.hostname == \"$NODE\") | .ipAddress" {{.TALOS_DIR}}/talconfig.yaml)
      talhelper gencommand apply --node $IP --extra-flags '--mode={{.MODE}}' | bash
    vars:
      MODE: '{{.MODE | default "auto"}}'
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq fzf

  upgrade-node:
    desc: Upgrade Talos on a single node [NODE=hostname or interactive]
    dir: '{{.TALOS_DIR}}'
    cmd: |
      if [ -z "{{.NODE}}" ]; then
        SELECTION=$(yq '.nodes[] | .hostname + " (" + .ipAddress + ") [" + (.controlPlane | tostring | sub("true"; "control-plane") | sub("false"; "worker")) + "]"' {{.TALOS_DIR}}/talconfig.yaml | fzf --prompt="Select node: ")
        NODE=$(echo "$SELECTION" | cut -d' ' -f1)
      else
        NODE="{{.NODE}}"
      fi
      IP=$(yq ".nodes[] | select(.hostname == \"$NODE\") | .ipAddress" {{.TALOS_DIR}}/talconfig.yaml)
      TALOS_IMAGE=$(yq ".nodes[] | select(.hostname == \"$NODE\") | .talosImageURL" {{.TALOS_DIR}}/talconfig.yaml)
      TALOS_VERSION=$(yq '.talosVersion' {{.TALOS_DIR}}/talenv.yaml)
      talhelper gencommand upgrade --node $IP --extra-flags "--image='$TALOS_IMAGE:$TALOS_VERSION' --timeout=10m" | bash
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which kubectl talhelper talosctl yq fzf

  upgrade-k8s:
    desc: Upgrade Kubernetes
    dir: '{{.TALOS_DIR}}'
    cmd: talhelper gencommand upgrade-k8s --extra-flags "--to '{{.KUBERNETES_VERSION}}'" | bash
    vars:
      KUBERNETES_VERSION:
        sh: yq '.kubernetesVersion' {{.TALOS_DIR}}/talenv.yaml
    preconditions:
      - talosctl config info
      - test -f {{.TALOSCONFIG}}
      - which talhelper talosctl yq

  reset:
    desc: Resets nodes back to maintenance mode
    dir: '{{.TALOS_DIR}}'
    prompt: This will destroy your cluster and reset the nodes back to maintenance mode... continue?
    cmd: talhelper gencommand reset --extra-flags="--reboot {{- if eq .CLI_FORCE false }} --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL{{ end }} --graceful=false --wait=false" | bash
    preconditions:
      - which talhelper
